/* Estilo da Listagem */
.listagem-container {
    width: 100%;
}

/* Estilo do cabeçalho */
.listagem-header {
    display: grid;
    font-weight: 600;
    color: #555;
    font-size: 0.9em;
    margin-bottom: 5px;
    padding-bottom: 5px;
}

#clientes-listagem-header {
    display: grid;
    font-weight: 600;
    color: var(--normal-black);
    font-size: 0.9em;
    margin-bottom: 5px;
    font-weight: bold;
    padding-bottom: 5px;
}

/* Estilo das linhas de dados */
.listagem-row {
    display: grid;
    align-items: center;
    padding: 12px 15px;
    margin-bottom: 10px;
    background-color: #fcfcfc;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08); /* Sombra sutil na linha, como no design */
    border: 1px solid #eee;
}

#clientes-listagem-row {
    display: grid;
    align-items: center;
    padding: 12px 15px;
    margin-bottom: 10px;
    background-color: #fcfcfc;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08); /* Sombra sutil na linha, como no design */
    border: 1px solid #eee;
}

.listagem-data {
    color: #333;
    font-size: 0.95em;
    /* Garante que textos longos (como o Número da Nota) sejam tratados */
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

/* *** DEFINIÇÃO DO LAYOUT (GRID TEMPLATE) POR CARD ***
   
   Usamos o CSS do componente pai (VisaoGeral) para definir o layout.
   Ajuste as proporções (fr) conforme a necessidade:
*/

/* Card 1: Próximos Atendimentos (Nome, Dia, Horário) - 3 colunas */
.listagem-header, .listagem-row {
    /* Layout Padrão: 3 colunas, 3fr (Nome), 2fr (Dia), 1fr (Horário) */
    grid-template-columns: 3fr 2fr 1fr;
}

#clientes-listagem-header, #clientes-listagem-row {
    /* Layout para Clientes: 4 colunas, 3fr (Nome), 1fr (CPF), 1.5fr (Telefone), 1fr (Status) */
    grid-template-columns: 3fr 1fr 1.5fr 1fr;
}
/* Card 2: Prazos de Notas Fiscais (Número, Data Limite) - 2 colunas */
/* OBS: Esta classe é opcional, mas garante que o layout funcione se houver 
   variações nas chaves ou ordem dos dados. É mais robusto definir a grade
   diretamente nas classes do cabeçalho.
*/
.header-numero, .data-numero {
    grid-column: 1 / span 1; /* Primeira Coluna */
}
.header-dataLimite, .data-dataLimite {
    grid-column: 2 / span 1; /* Segunda Coluna */
}
/* No Card de Notas Fiscais, o grid-template-columns é de 2fr 1fr */
/* Se estiver usando a Listagem, você teria que definir as colunas no CSS
   ou de forma dinâmica no JSX, o que é mais complexo. 
   Para o seu caso, a melhor prática é:
*/

/* Definir o layout para cards de 2 colunas (mais genérico) */
.cards-grid > div:nth-child(2) .listagem-header,
.cards-grid > div:nth-child(2) .listagem-row,
.cards-grid > div:nth-child(3) .listagem-header,
.cards-grid > div:nth-child(3) .listagem-row,
.cards-grid > div:nth-child(4) .listagem-header,
.cards-grid > div:nth-child(4) .listagem-row {
    grid-template-columns: 3fr 2fr; /* 2 colunas (tamanho longo, tamanho curto) */
} 